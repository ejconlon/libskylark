INCLUDE( FindPkgConfig )

IF ( Serialport_FIND_REQUIRED )
	SET( _pkgconfig_REQUIRED "REQUIRED" )
ELSE( Serialport_FIND_REQUIRED )
	SET( _pkgconfig_REQUIRED "" )
ENDIF ( Serialport_FIND_REQUIRED )

IF ( SERIALPORT_MIN_VERSION )
	PKG_SEARCH_MODULE( SERIALPORT ${_pkgconfig_REQUIRED} serialport>=${SERIALPORT_MIN_VERSION} )
ELSE ( SERIALPORT_MIN_VERSION )
	PKG_SEARCH_MODULE( SERIALPORT ${_pkgconfig_REQUIRED} serialport )
ENDIF ( SERIALPORT_MIN_VERSION )

# Look for SERIALPORT include dir and libraries
IF( NOT SERIALPORT_FOUND AND NOT PKG_CONFIG_FOUND )
	FIND_PATH( SERIALPORT_INCLUDE_DIRS libserialport.h )
	FIND_LIBRARY( SERIALPORT_LIBRARIES NAMES serialport )
	IF ( SERIALPORT_INCLUDE_DIRS AND SERIALPORT_LIBRARIES )
		SET( SERIALPORT_FOUND 1 )
		IF ( NOT Serialport_FIND_QUIETLY )
			MESSAGE ( STATUS "Found SERIALPORT: ${SERIALPORT_LIBRARIES}" )
		ENDIF ( NOT Serialport_FIND_QUIETLY )
	ELSE ( SERIALPORT_INCLUDE_DIRS AND SERIALPORT_LIBRARIES )
		IF ( Serialport_FIND_REQUIRED )
			MESSAGE( FATAL_ERROR "Could NOT find SERIALPORT" )
		ELSE ( Serialport_FIND_REQUIRED )
			IF ( NOT Serialport_FIND_QUIETLY )
				MESSAGE( STATUS "Could NOT find SERIALPORT" )
			ENDIF ( NOT Serialport_FIND_QUIETLY )
		ENDIF ( Serialport_FIND_REQUIRED )
	ENDIF ( SERIALPORT_INCLUDE_DIRS AND SERIALPORT_LIBRARIES )
ENDIF( NOT SERIALPORT_FOUND AND NOT PKG_CONFIG_FOUND )

# Hide advanced variables from CMake GUIs
MARK_AS_ADVANCED( SERIALPORT_INCLUDE_DIRS SERIALPORT_LIBRARIES )
